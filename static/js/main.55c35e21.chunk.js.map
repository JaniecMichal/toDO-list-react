{"version":3,"sources":["Form/index.js","TaskList/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["form","className","placeholder","autofocus","taskList","tasks","hideDoneTask","map","task","done","content","Buttons","length","Fragment","disabled","every","Section","title","body","extraContent","Header","mainTitle","Container","children","Footer","href","target","rel","id","App","Form","TaskList","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.55c35e21.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst form = () => (\r\n    <form className=\"form\">\r\n        <input className=\"form__input\" placeholder=\"Wpisz zadanie do wykonania\" autofocus />\r\n        <button className=\"form__addTaskButton\">Dodaj zadanie</button>\r\n    </form>\r\n);\r\n\r\nexport default form;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst taskList = ({ tasks, hideDoneTask }) => (\r\n    <ul className=\"taskList\">\r\n        {tasks.map(task => (\r\n            <li className={`taskList__listItem ${hideDoneTask && task.done ? \"taskList__listItem--hidden\" : \"\"}`}\r\n            >\r\n                <button className={`taskList__button ${task.done ? \" taskList__button--done\" : \"\"}`}></button>\r\n                <p className={`taskList__task ${task.done ? \" taskList__task--done\" : \"\"}`} > {task.content}</p>\r\n                <button className=\"taskList__button taskList__button--remove\"></button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default taskList;","import React from 'react';\r\nimport \"./style.css\"\r\n\r\nconst Buttons = ({ tasks, hideDoneTask }) => (\r\n\r\n    <div className=\"buttonContainer\">\r\n\r\n        {tasks.length > 0 && (\r\n            <React.Fragment>\r\n                <button className=\"button\" disabled={tasks.every(({ done }) => done)}>\r\n                    Oznacz wszystkie jako ukończone\r\n                </button>\r\n                <button className=\"button button--hideDone\">\r\n                    {hideDoneTask ? \"Pokaż wykonane zadania\" : \"Ukryj wykonane zadania\"}\r\n                </button>\r\n                <button className=\"button button--allRemove\">\r\n                    Usuń wszystkie zadania\r\n                </button>\r\n            </React.Fragment>\r\n        )}\r\n    </div>\r\n\r\n)\r\n\r\nexport default Buttons","import React from 'react';\r\nimport \"./style.css\"\r\n\r\nconst Section = ({ title, body, extraContent }) => (\r\n    <section className=\"section\">\r\n\r\n        <header className=\"section__header\">\r\n            <h2 className=\"section__headerTitle\">{title}</h2>\r\n\r\n        </header>\r\n        <div>\r\n            {extraContent}\r\n            {body}\r\n        </div>\r\n\r\n    </section>\r\n);\r\n\r\nexport default Section;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ mainTitle }) => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__title\">{mainTitle}</h1>\r\n    </header>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">\r\n        <h3 className=\"footer__footerText\"\r\n        >Wszelkie prawa zastrzeżone.&copy; ToDo List by Imperator. Projekt 2020.\r\n        </h3>\r\n\r\n        <h4 className=\"footer__titleSource\">Źródła</h4>\r\n\r\n        <div className=\"footer__sources\">Icons made by\r\n        <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">Freepik</a>\r\n        from\r\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">www.flaticon.com\r\n        </a>\r\n        </div>\r\n\r\n        <div className=\"footer__sources\">Icons made by\r\n        <a href=\"https://freeicons.io/profile/3277\" title=\"Gayrat Muminov\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">Gayrat Muminov</a>\r\n        from\r\n        <a href=\"https://freeicons.io/\" title=\"Flaticon\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">www.flaticon.com\r\n        </a>\r\n        </div>\r\n\r\n        <div className=\"footer__sources\">Icons made by\r\n        <a href=\"https://freeicons.io/profile/714\" title=\"Raj Dev\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">Raj Dev</a>\r\n        from\r\n        <a href=\"https://freeicons.io/\" title=\"Flaticon\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">www.flaticon.com\r\n        </a>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React from 'react';\nimport Form from \"./Form\";\nimport TaskList from \"./TaskList\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport Footer from \"./Footer\";\n\n\nconst tasks = [\n  { id: 1, content: \"przejść na reacta\", done: false },\n  { id: 2, content: \"iść spać\", done: true },\n];\n\nconst hideDoneTask = false;\n\nfunction App() {\n  return (\n    <Container>\n      <Header mainTitle=\"React ToDO list by {Imperator}\" />\n\n      <Section title=\"Dodaj nowe zadanie\" body={<Form />} />\n\n      <Section title=\"Lista zadań do zrobienia\" extraContent={<Buttons tasks={tasks} hideDoneTask={hideDoneTask} />}\n        body={<TaskList tasks={tasks} hideDoneTask={hideDoneTask} />} />\n\n      <Footer />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}