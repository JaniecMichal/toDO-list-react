{"version":3,"sources":["Form/index.js","TaskList/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","taskInput","useRef","className","onSubmit","event","preventDefault","trim","current","focus","value","onChange","target","placeholder","ref","autoFocus","taskList","tasks","hideDone","removeTask","toggleDone","map","task","key","id","done","onClick","content","Buttons","toggleHideDone","setAllDone","removeAll","length","Fragment","disabled","every","Section","title","body","extraContent","Header","mainTitle","Container","children","Footer","href","rel","App","localStorage","getItem","JSON","parse","setHideDone","setTasks","useEffect","setItem","stringify","TaskList","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c4c84eb7.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const taskInput = useRef(null);\r\n\r\n    const setFocus = () => {\r\n        taskInput.current.focus();\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n        setFocus();\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n                className=\"form__input\"\r\n                placeholder=\"Wpisz zadanie do wykonania\"\r\n                ref={taskInput}\r\n                autoFocus\r\n            />\r\n            <button className=\"form__addTaskButton\">Dodaj zadanie</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst taskList = ({ tasks, hideDone, removeTask, toggleDone }) => (\r\n    <ul className=\"taskList\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`taskList__listItem ${hideDone && task.done ? \"taskList__listItem--hidden\" : \"\"}`}\r\n            >\r\n                <button\r\n                    className={`taskList__button ${task.done ? \" taskList__button--done\" : \"\"}`}\r\n                    onClick={() => toggleDone(task.id)}\r\n                >\r\n\r\n                </button>\r\n                <p className={`taskList__task ${task.done ? \" taskList__task--done\" : \"\"}`} > {task.content}</p>\r\n                <button\r\n                    className=\"taskList__button taskList__button--remove\"\r\n                    onClick={() => removeTask(task.id)}>\r\n\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default taskList;","import React from 'react';\r\nimport \"./style.css\"\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone, removeAll }) => (\r\n\r\n    <div className=\"buttonContainer\">\r\n\r\n        {tasks.length > 0 && (\r\n            <React.Fragment>\r\n                <button\r\n                    className=\"button\"\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                    onClick={setAllDone}\r\n                >\r\n                    Oznacz wszystkie jako ukończone\r\n                </button>\r\n                <button\r\n                    className=\"button button--hideDone\"\r\n                    onClick={toggleHideDone}\r\n                >\r\n                    {hideDone ? \"Pokaż wykonane zadania\" : \"Ukryj wykonane zadania\"}\r\n                </button>\r\n                <button\r\n                    className=\"button button--allRemove\"\r\n                    onClick={removeAll}\r\n                >\r\n                    Usuń wszystkie zadania\r\n                </button>\r\n            </React.Fragment>\r\n        )}\r\n    </div>\r\n\r\n)\r\n\r\nexport default Buttons","import React from 'react';\r\nimport \"./style.css\"\r\n\r\nconst Section = ({ title, body, extraContent }) => (\r\n    <section className=\"section\">\r\n\r\n        <header className=\"section__header\">\r\n            <h2 className=\"section__headerTitle\">{title}</h2>\r\n\r\n        </header>\r\n        <div>\r\n            {extraContent}\r\n            {body}\r\n        </div>\r\n\r\n    </section>\r\n);\r\n\r\nexport default Section;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ mainTitle }) => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__title\">{mainTitle}</h1>\r\n    </header>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">\r\n        <h3 className=\"footer__footerText\"\r\n        >Wszelkie prawa zastrzeżone.&copy; ToDo List by Imperator. Projekt 2020.\r\n        </h3>\r\n\r\n        <h4 className=\"footer__titleSource\">Źródła</h4>\r\n\r\n        <div className=\"footer__sources\">Icons made by\r\n        <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">Freepik</a>\r\n        from\r\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">www.flaticon.com\r\n        </a>\r\n        </div>\r\n\r\n        <div className=\"footer__sources\">Icons made by\r\n        <a href=\"https://freeicons.io/profile/3277\" title=\"Gayrat Muminov\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">Gayrat Muminov</a>\r\n        from\r\n        <a href=\"https://freeicons.io/\" title=\"Flaticon\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">www.flaticon.com\r\n        </a>\r\n        </div>\r\n\r\n        <div className=\"footer__sources\">Icons made by\r\n        <a href=\"https://freeicons.io/profile/714\" title=\"Raj Dev\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">Raj Dev</a>\r\n        from\r\n        <a href=\"https://freeicons.io/\" title=\"Flaticon\" className=\"footer__link\"\r\n                target=\"_blank\" rel=\"noreferrer noopener\">www.flaticon.com\r\n        </a>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport Form from \"./Form\";\nimport TaskList from \"./TaskList\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport Footer from \"./Footer\";\n\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(\n    localStorage.getItem(\"hideDone\") !== null ? JSON.parse(localStorage.getItem(\"hideDone\")) : (false)\n  );\n  const [tasks, setTasks] = useState(\n    localStorage.getItem(\"tasks\") !== null ? JSON.parse(localStorage.getItem(\"tasks\")) : []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  useEffect(() => {\n    localStorage.setItem(\"hideDone\", JSON.stringify(hideDone));\n  }, [hideDone]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n      return task;\n\n    }))\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => (\n      {\n        ...task,\n        done: true,\n      })))\n  };\n\n  const addNewTasks = (content) => {\n    if (content !== \"\") {\n      setTasks(tasks =>\n        [\n          ...tasks,\n          {\n            content,\n            done: false,\n            id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n          }\n        ])\n    };\n    return;\n  };\n\n  const removeAll = () => {\n    setTasks(tasks => [])\n  };\n\n  return (\n    <Container>\n      <Header mainTitle=\"React ToDO list by {Imperator}\" />\n\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTasks} />} />\n\n      <Section\n        title=\"Lista zadań do zrobienia\"\n        extraContent=\n        {\n          <Buttons\n            tasks={tasks}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n            removeAll={removeAll}\n          />}\n\n        body=\n        {\n          <TaskList\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleDone={toggleDone}\n\n          />} />\n\n      <Footer />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}